# Output pattern : date [thread] priority category - message
log4j.rootCategory=DEBUG,CONSOLE,RollingFile

#Console
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
#log4j.appender.CONSOLE.Threshold=INFO
log4j.appender.CONSOLE.Target=System.out
log4j.appender.CONSOLE.Encoding=UTF-8
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
#log4j.appender.CONSOLE.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} [%P]| %C{5}.%M(%L).[%t] | %m%n
log4j.appender.CONSOLE.layout.ConversionPattern=%d{yyyy/MM/dd HH:mm:ss} [%p]|%t|%C{1}.%M(%L)| %m%n

#RollingFile
log4j.appender.RollingFile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.RollingFile.File=logs/sqlutil.log
log4j.appender.RollingFile.Encoding=UTF-8
#log4j.appender.RollingFile.Threshold=INFO
log4j.appender.RollingFile.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.RollingFile.layout=org.apache.log4j.PatternLayout
log4j.appender.RollingFile.layout.ConversionPattern=%d - %c [%t] %-5p %c %x - %m%n
#Project defalult level
log4j.logger.im=debug

# 关于输出格式的设置，请参考org.apache.log4j.PatternLayout
#----------------------------------------------------------
# %p 输出优先级，即ALL,DEBUG,INFO,WARN,ERROR,FATAL,OFF;
# %r 输出自应用启动到输出该log信息耗费的毫秒数;
# %c 输出所属的类目，通常就是所在类的全名;
# %t 输出产生该日志事件的线程名;
# %n 输出一个回车换行符，Windows平台为"\r\n"，Unix平台为"\n";
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式,如(yyyy-MM-dd HH:mm:ss,SSS);
# %L 输出代码中的行数;
# %l 输出代码中的所属文件中的方法下面的行数（附带链接）;
# %F 输出代码中的文件名;
# %m 输出消息;